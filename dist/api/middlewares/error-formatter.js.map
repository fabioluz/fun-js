{"version":3,"sources":["../../../src/api/middlewares/error-formatter.js"],"names":["compose","prop","allPass","gte","lte","equals","S","isValError","isSuccess","errorFormatter","ctx","next","body","error","value","process","env","NODE_ENV"],"mappings":";;;;;;AAAA;;AAEA,MAAM,EAAEA,OAAF,EAAWC,IAAX,EAAiBC,OAAjB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,MAApC,KAA+CC,MAArD;;AAEA;AACA,MAAMC,aAAaP,QAASK,OAAQ,GAAR,CAAT,EACSJ,KAAM,QAAN,CADT,CAAnB;;AAGA;AACA,MAAMO,YAAYR,QAASE,QAAS,CAACC,IAAK,GAAL,CAAD,EAAYC,IAAK,GAAL,CAAZ,CAAT,CAAT,EACSH,KAAM,QAAN,CADT,CAAlB;;AAGA;AACA,MAAMQ,iBAAiB,CAACC,GAAD,EAAMC,IAAN,KAAe;AACpC,MAAIH,UAAWE,GAAX,CAAJ,EAAqB;AACnB,WAAOC,MAAP;AACD;;AAED,MAAIJ,WAAYG,GAAZ,CAAJ,EAAsB;AACpBA,QAAIE,IAAJ,GAAW,EAAEC,OAAOH,IAAIE,IAAJ,CAASE,KAAlB,EAAX;AACA,WAAOH,MAAP;AACD;;AAED,MAAII,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCP,QAAIE,IAAJ,GAAW,IAAX;AACA,WAAOD,MAAP;AACD;AACF,CAdD;;kBAgBe,MAAMF,c","file":"error-formatter.js","sourcesContent":["import { S } from '../../fun';\r\n\r\nconst { compose, prop, allPass, gte, lte, equals } = S;\r\n\r\n// isValError :: Context -> Boolean\r\nconst isValError = compose (equals (422))\r\n                           (prop ('status'));\r\n\r\n// isSuccess :: Context -> Boolean\r\nconst isSuccess = compose (allPass ([gte (200), lte (299)]))\r\n                          (prop ('status'));\r\n\r\n// errorFormatter :: Middleware\r\nconst errorFormatter = (ctx, next) => {\r\n  if (isSuccess (ctx)) {\r\n    return next ();\r\n  }\r\n\r\n  if (isValError (ctx)) {\r\n    ctx.body = { error: ctx.body.value };\r\n    return next ();\r\n  }\r\n\r\n  if (process.env.NODE_ENV === 'production') {\r\n    ctx.body = null;\r\n    return next ();\r\n  }\r\n};\r\n\r\nexport default () => errorFormatter;"]}