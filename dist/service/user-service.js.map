{"version":3,"sources":["../../src/service/user-service.js"],"names":["getAll_A","$","PositiveInteger","$Env","Future","$AppError","Array","Object","createUser_A","$User","prop","invoke","pipe","pipeK","S","getUserRepository","env","repositories","user","getAll_I","page","insertUser","createUser_I","input","validateUser","encryptUser","of","createUser","getAll"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;;AAEA,MAAMA,WAAW,CAAEC,OAAEC,eAAJ,EAAqBC,SAArB,EAA2BF,OAAEG,MAAF,CAAUC,gBAAV,EAAsBJ,OAAEK,KAAF,CAASL,OAAEM,MAAX,CAAtB,CAA3B,CAAjB;;AAEA,MAAMC,eAAe,CAAEP,OAAEM,MAAJ,EAAYJ,SAAZ,EAAkBF,OAAEG,MAAF,CAAUC,gBAAV,EAAsBI,WAAtB,CAAlB,CAArB;;AAIA;AACA;AACA;;AAEA,MAAM,EAAEC,IAAF,EAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,KAAgCC,MAAtC;;AAEA;AACA,MAAMC,oBAAoBC,OACxBA,IAAIC,YAAJ,CAAiBC,IADnB;;AAGA;AACA,MAAMC,WAAWC,QAAQJ,OACvBJ,KAAM,CACJG,iBADI,EAEJL,KAAM,QAAN,CAFI,EAGJC,OAAQS,IAAR,CAHI,CAAN,EAIIJ,GAJJ,CADF;;AAOA;AACA,MAAMK,aAAaH,QACjBN,KAAM,CACJG,iBADI,EAEJL,KAAM,QAAN,CAFI,EAGJC,OAAQO,IAAR,CAHI,CAAN,CADF;;AAOA;AACA,MAAMI,eAAeC,SAASP,OAC5BH,MAAO,CACLW,kBADK,EAELC,iBAFK,EAGLJ,WAAYL,GAAZ,CAHK,CAAP,EAIIZ,YAAOsB,EAAP,CAAWH,KAAX,CAJJ,CADF;;AASA;AACA;AACA;;AAEA,MAAMI,aACJ,cAAK,YAAL,EACK,EADL,EAEKnB,YAFL,EAGKc,YAHL,CADF;;AAMA,MAAMM,SACJ,cAAK,QAAL,EACK,EADL,EAEK5B,QAFL,EAGKmB,QAHL,CADF;;kBAMe;AACbS,QADa;AAEbD;AAFa,C","file":"user-service.js","sourcesContent":["import { $, S, Future, def } from '../fun';\r\nimport { $AppError } from '../common/types/error';\r\nimport { $Env } from '../common/types/env';\r\nimport { $User, validateUser, encryptUser } from '../model/user';\r\n\r\n////////////////////////////////////////////////////\r\n//  Algebra\r\n////////////////////////////////////////////////////\r\n\r\nconst getAll_A = [ $.PositiveInteger, $Env, $.Future ($AppError) ($.Array ($.Object)) ];\r\n\r\nconst createUser_A = [ $.Object, $Env, $.Future ($AppError) ($User) ];\r\n\r\n\r\n\r\n////////////////////////////////////////////////////\r\n//  Interpreter\r\n////////////////////////////////////////////////////\r\n\r\nconst { prop, invoke, pipe, pipeK } = S;\r\n\r\n// getUserRepository :: Env -> UserRepository\r\nconst getUserRepository = env => \r\n  env.repositories.user;\r\n\r\n// getAll_I :: Number -> Env -> Future AppError (Array Object)\r\nconst getAll_I = page => env => \r\n  pipe ([\r\n    getUserRepository,\r\n    prop ('getAll'),\r\n    invoke (page)\r\n  ]) (env);\r\n\r\n// insertUser :: Env -> User -> Future AppError User\r\nconst insertUser = user =>\r\n  pipe ([ \r\n    getUserRepository,\r\n    prop ('insert'),\r\n    invoke (user)\r\n  ]);\r\n\r\n// createUser_I :: Object -> Env -> Future AppError User\r\nconst createUser_I = input => env =>\r\n  pipeK ([\r\n    validateUser,\r\n    encryptUser,\r\n    insertUser (env)\r\n  ]) (Future.of (input));\r\n\r\n\r\n\r\n////////////////////////////////////////////////////\r\n//  Export\r\n////////////////////////////////////////////////////\r\n\r\nconst createUser = \r\n  def ('createUser')\r\n      ({})\r\n      (createUser_A)\r\n      (createUser_I);\r\n\r\nconst getAll =\r\n  def ('getAll')\r\n      ({})\r\n      (getAll_A)\r\n      (getAll_I);\r\n\r\nexport default {\r\n  getAll,\r\n  createUser\r\n}"]}