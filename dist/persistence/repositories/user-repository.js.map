{"version":3,"sources":["../../../src/persistence/repositories/user-repository.js"],"names":["getAll_A","$CommonListRequest","$","Future","$AppError","Array","$UserResponse","insert_A","$User","prop","compose","map","K","S","getAll_I","commonListReq","page","take","sql","offset","params","queryResult","UserResponse","of","insert_I","user","id","email","password","fullname","getAll","insert"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;;AAEA,MAAMA,WAAW,CAAEC,2BAAF,EAAsBC,OAAEC,MAAF,CAAUC,gBAAV,EAAsBF,OAAEG,KAAF,CAASC,uBAAT,CAAtB,CAAtB,CAAjB;;AAEA,MAAMC,WAAW,CAAEC,WAAF,EAASN,OAAEC,MAAF,CAAUC,gBAAV,EAAsBI,WAAtB,CAAT,CAAjB;;AAIA;AACA;AACA;;AAEA,MAAM,EAAEC,IAAF,EAAQC,OAAR,EAAiBC,GAAjB,EAAsBC,CAAtB,KAA4BC,MAAlC;;AAEA;AACA,MAAMC,WAAWC,iBAAiB;AAChC,QAAM,EAAEC,IAAF,EAAQC,IAAR,KAAiBF,aAAvB;AACA,QAAMG,MAAO;;;wBAAb;;AAKA,QAAMC,SAAS,CAACH,OAAO,CAAR,IAAaC,IAA5B;AACA,QAAMG,SAAS,CAAED,MAAF,EAAUF,IAAV,CAAf;;AAEA,QAAMI,cAAc,8BAAgB,qBAAOH,GAAP,EAAaE,MAAb,CAAhB,CAApB;;AAEA,SAAOV,QACCC,IAAKA,IAAKW,uBAAaC,EAAlB,CAAL,CADD,EAECZ,IAAKF,KAAM,MAAN,CAAL,CAFD,EAGCY,WAHD,CAAP;AAID,CAhBD;;AAkBA;AACA,MAAMG,WAAWC,QAAQ;AACvB,QAAMP,MAAM,2EAAZ;AACA,QAAME,SAAS,CAAEK,KAAKC,EAAP,EAAWD,KAAKE,KAAhB,EAAuBF,KAAKG,QAA5B,EAAsCH,KAAKI,QAA3C,CAAf;;AAEA,QAAMR,cAAc,8BAAgB,qBAAOH,GAAP,EAAaE,MAAb,CAAhB,CAApB;AACA,SAAOT,IAAKC,EAAGa,IAAH,CAAL,EAAgBJ,WAAhB,CAAP;AACD,CAND;;AAUA;AACA;AACA;;AAEA,MAAMS,SACJ,cAAK,QAAL,EACK,EADL,EAEK9B,QAFL,EAGKc,QAHL,CADF;;AAMA,MAAMiB,SACJ,cAAK,QAAL,EACK,EADL,EAEKxB,QAFL,EAGKiB,QAHL,CADF;;kBAMe;AACbM,QADa;AAEbC;AAFa,C","file":"user-repository.js","sourcesContent":["import { $, S, def } from '../../fun';\r\nimport { $AppError } from '../../common/types/error';\r\nimport { $CommonListRequest } from '../../common/types/request';\r\nimport { $UserResponse, UserResponse } from '../../common/types/response';\r\nimport { $User } from '../../model/user';\r\nimport { withConnection, query } from '../database';\r\n\r\n///////////////////////////////////////////////////////\r\n//  Algebra\r\n///////////////////////////////////////////////////////\r\n\r\nconst getAll_A = [ $CommonListRequest, $.Future ($AppError) ($.Array ($UserResponse)) ];\r\n\r\nconst insert_A = [ $User, $.Future ($AppError) ($User) ];\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////\r\n//  Interpreter\r\n///////////////////////////////////////////////////////\r\n\r\nconst { prop, compose, map, K } = S;\r\n\r\n// getAll_I :: CommonListRequest -> Future DatabaseError (Array UserResponse)\r\nconst getAll_I = commonListReq => {\r\n  const { page, take } = commonListReq;\r\n  const sql = `SELECT id, email, fullname\r\n               FROM users\r\n               OFFSET $1\r\n               LIMIT $2`;\r\n\r\n  const offset = (page - 1) * take;\r\n  const params = [ offset, take ];\r\n\r\n  const queryResult = withConnection (query (sql) (params));\r\n\r\n  return compose\r\n         (map (map (UserResponse.of)))\r\n         (map (prop ('rows')))\r\n         (queryResult);\r\n};\r\n\r\n// insert_I :: User -> Future DatabaseError User\r\nconst insert_I = user => {\r\n  const sql = 'INSERT INTO users (id, email, password, fullname) VALUES ($1, $2, $3, $4)';\r\n  const params = [ user.id, user.email, user.password, user.fullname ];\r\n\r\n  const queryResult = withConnection (query (sql) (params));\r\n  return map (K (user)) (queryResult);\r\n};\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////\r\n//  Export\r\n///////////////////////////////////////////////////////\r\n\r\nconst getAll =\r\n  def ('getAll')\r\n      ({})\r\n      (getAll_A)\r\n      (getAll_I);\r\n\r\nconst insert = \r\n  def ('insert')\r\n      ({})\r\n      (insert_A)\r\n      (insert_I);\r\n\r\nexport default {\r\n  getAll,\r\n  insert\r\n}\r\n"]}