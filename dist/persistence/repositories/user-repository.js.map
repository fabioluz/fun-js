{"version":3,"sources":["../../../src/persistence/repositories/user-repository.js"],"names":["getAll_A","$","PositiveInteger","Future","$AppError","Array","Object","insert_A","$User","map","S","TAKE_AMOUNT","getAll_I","page","sql","skip","params","queryResult","result","rows","insert_I","user","id","email","password","fullname","_","getAll","insert"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;;AAEA,MAAMA,WAAW,CAAEC,OAAEC,eAAJ,EAAqBD,OAAEE,MAAF,CAAUC,gBAAV,EAAsBH,OAAEI,KAAF,CAASJ,OAAEK,MAAX,CAAtB,CAArB,CAAjB;;AAEA,MAAMC,WAAW,CAAEC,WAAF,EAASP,OAAEE,MAAF,CAAUC,gBAAV,EAAsBI,WAAtB,CAAT,CAAjB;;AAIA;AACA;AACA;;AAEA,MAAM,EAAEC,GAAF,KAAUC,MAAhB;;AAEA,MAAMC,cAAc,EAApB;;AAEA;AACA,MAAMC,WAAWC,QAAQ;AACvB,QAAMC,MAAO;;;wBAAb;;AAKA,QAAMC,OAAO,CAACF,OAAO,CAAR,IAAaF,WAA1B;AACA,QAAMK,SAAS,CAAED,IAAF,EAAQJ,WAAR,CAAf;;AAEA,QAAMM,cAAc,8BAAgB,qBAAOH,GAAP,EAAaE,MAAb,CAAhB,CAApB;AACA,SAAOP,IAAKS,UAAUA,OAAOC,IAAtB,EAA6BF,WAA7B,CAAP;AACD,CAXD;;AAaA;AACA,MAAMG,WAAWC,QAAQ;AACvB,QAAMP,MAAM,2EAAZ;AACA,QAAME,SAAS,CAAEK,KAAKC,EAAP,EAAWD,KAAKE,KAAhB,EAAuBF,KAAKG,QAA5B,EAAsCH,KAAKI,QAA3C,CAAf;;AAEA,QAAMR,cAAc,8BAAgB,qBAAOH,GAAP,EAAaE,MAAb,CAAhB,CAApB;AACA,SAAOP,IAAKiB,KAAKL,IAAV,EAAiBJ,WAAjB,CAAP;AACD,CAND;;AAUA;AACA;AACA;;AAEA,MAAMU,SACJ,cAAK,QAAL,EACK,EADL,EAEK3B,QAFL,EAGKY,QAHL,CADF;;AAMA,MAAMgB,SACJ,cAAK,QAAL,EACK,EADL,EAEKrB,QAFL,EAGKa,QAHL,CADF;;kBAMe;AACbO,QADa;AAEbC;AAFa,C","file":"user-repository.js","sourcesContent":["import { $, S, def } from '../../fun';\r\nimport { $AppError } from '../../common/types/error';\r\nimport { $User } from '../../model/user';\r\nimport { withConnection, query } from '../database';\r\n\r\n///////////////////////////////////////////////////////\r\n//  Algebra\r\n///////////////////////////////////////////////////////\r\n\r\nconst getAll_A = [ $.PositiveInteger, $.Future ($AppError) ($.Array ($.Object)) ];\r\n\r\nconst insert_A = [ $User, $.Future ($AppError) ($User) ];\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////\r\n//  Interpreter\r\n///////////////////////////////////////////////////////\r\n\r\nconst { map } = S;\r\n\r\nconst TAKE_AMOUNT = 10;\r\n\r\n// getAll_I :: Number -> Future DatabaseError (Array Object)\r\nconst getAll_I = page => {\r\n  const sql = `SELECT id, email, fullname \r\n               FROM users\r\n               OFFSET $1\r\n               LIMIT $2`;\r\n\r\n  const skip = (page - 1) * TAKE_AMOUNT;\r\n  const params = [ skip, TAKE_AMOUNT ];\r\n\r\n  const queryResult = withConnection (query (sql) (params));\r\n  return map (result => result.rows) (queryResult);\r\n};\r\n\r\n// insert_I :: User -> Future DatabaseError User\r\nconst insert_I = user => {\r\n  const sql = 'INSERT INTO users (id, email, password, fullname) VALUES ($1, $2, $3, $4)';\r\n  const params = [ user.id, user.email, user.password, user.fullname ];\r\n\r\n  const queryResult = withConnection (query (sql) (params));\r\n  return map (_ => user) (queryResult);\r\n};\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////\r\n//  Export\r\n///////////////////////////////////////////////////////\r\n\r\nconst getAll =\r\n  def ('getAll')\r\n      ({})\r\n      (getAll_A)\r\n      (getAll_I);\r\n\r\nconst insert = \r\n  def ('insert')\r\n      ({})\r\n      (insert_A)\r\n      (insert_I);\r\n\r\nexport default {\r\n  getAll,\r\n  insert\r\n}\r\n"]}