{"version":3,"sources":["../../src/persistence/migrator.js"],"names":["chain","S","dbName","process","env","DB_NAME","dbParams","database","user","DB_USER","password","DB_PASSWORD","host","DB_HOST","port","Number","DB_PORT","migrationPath","createDb","Future","encaseP2","Migrations","migrate","migration","fork","error","console","log"],"mappings":";;AAAA;;;;AACA;;;;AAEA,MAAM,EAAEA,KAAF,KAAYC,MAAlB;;AAEA,MAAMC,SAASC,QAAQC,GAAR,CAAYC,OAA3B;;AAEA,MAAMC,WAAW;AACfC,YAAUJ,QAAQC,GAAR,CAAYC,OADP;AAEfG,QAAOL,QAAQC,GAAR,CAAYK,OAFJ;AAGfC,YAAUP,QAAQC,GAAR,CAAYO,WAHP;AAIfC,QAAMT,QAAQC,GAAR,CAAYS,OAJH;AAKfC,QAAMC,OAAQZ,QAAQC,GAAR,CAAYY,OAApB;AALS,CAAjB;;AAQA,MAAMC,gBAAgB,4BAAtB;;AAEA,MAAMC,WAAW,MAAMC,YAAOC,QAAP,CAAiBC,6BAAWH,QAA5B,EAAuChB,MAAvC,EAA+CI,QAA/C,CAAvB;;AAEA,MAAMgB,UAAU,MAAMH,YAAOC,QAAP,CAAiBC,6BAAWC,OAA5B,EAAsChB,QAAtC,EAAgDW,aAAhD,CAAtB;;AAEA,MAAMM,YAAYvB,MAAOsB,OAAP,EAAiBJ,UAAjB,CAAlB;;AAEAK,UAAUC,IAAV,CACEC,SAASC,QAAQD,KAAR,CAAgB,kCAAiCA,KAAM,EAAvD,CADX,EAEE,MAAMC,QAAQC,GAAR,CAAa,sBAAb,CAFR","file":"migrator.js","sourcesContent":["import Migrations from 'postgres-migrations';\r\nimport { S, Future } from '../fun';\r\n\r\nconst { chain } = S;\r\n\r\nconst dbName = process.env.DB_NAME;\r\n\r\nconst dbParams = {\r\n  database: process.env.DB_NAME,\r\n  user : process.env.DB_USER,\r\n  password: process.env.DB_PASSWORD,\r\n  host: process.env.DB_HOST,\r\n  port: Number (process.env.DB_PORT)\r\n}\r\n\r\nconst migrationPath = 'src/persistence/migrations';\r\n\r\nconst createDb = () => Future.encaseP2 (Migrations.createDb) (dbName, dbParams);\r\n\r\nconst migrate = () => Future.encaseP2 (Migrations.migrate) (dbParams, migrationPath);\r\n\r\nconst migration = chain (migrate) (createDb ());\r\n\r\nmigration.fork (\r\n  error => console.error (`Error while running migration: ${error}`),\r\n  () => console.log ('Migration succeeded.')\r\n);"]}