{"version":3,"sources":["../../../src/common/validation/_common-validators.js"],"names":["curry3","map","mapLeft","pipeK","compose","isRight","ifElse","toMaybe","maybeToNullable","Right","S","_replace","key","replacement","error","message","value","ValidationError","of","replace","_format","_validate","fns","format","$ValErrorOrMaybeA","$","$Either","$ValidationError","$Maybe","$a","$ValErrorOrAny","Any","String","validate","Array","Function"],"mappings":";;;;;;;AAAA;;AAEA,MAAM,EAAEA,MAAF,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,KAAxB,EAA+BC,OAA/B,EAAwCC,OAAxC,EAAiDC,MAAjD;AACEC,SADF,EACWC,eADX,EAC4BC,KAD5B,KACsCC,MAD5C;;AAGA;AACA,MAAMC,WAAWX,OAAQ,CAACY,GAAD,EAAMC,WAAN,EAAmBC,KAAnB,KAA6B;AACpD,QAAMC,UAAUD,MAAME,KAAtB;AACA,SAAOC,qBAAgBC,EAAhB,CAAoBH,QAAQI,OAAR,CAAiBP,GAAjB,EAAsBC,WAAtB,CAApB,CAAP;AACD,CAHgB,CAAjB;;AAKA;AACA,MAAMO,UAAUR,OAAON,OAAQD,OAAR,EACQJ,IAAKO,eAAL,CADR,EAEQN,QAASiB,QAAS,MAAT,EAAkBP,GAAlB,CAAT,CAFR,CAAvB;;AAIA;AACA,MAAMS,YAAYrB,OAAQ,CAACsB,GAAD,EAAMV,GAAN,EAAWI,KAAX,KAAqB;AAC7C,SAAOZ,QAASmB,OAAQX,GAAR,CAAT,EACST,MAAOmB,GAAP,CADT,EAESb,MAAOF,QAASS,KAAT,CAAP,CAFT,CAAP;AAGD,CAJiB,CAAlB;;AAQA;;AAEA,MAAMQ,oBAAoBC,OAAEC,OAAF,CAAWD,OAAEE,gBAAb,EAAgCF,OAAEG,MAAF,CAAUH,OAAEI,EAAZ,CAAhC,CAA1B;AACA,MAAMC,iBAAiBL,OAAEC,OAAF,CAAWD,OAAEE,gBAAb,EAAgCF,OAAEM,GAAlC,CAAvB;;AAEA,MAAMZ,UACJ,cAAK,SAAL,EACK,EADL,EAEK,CAACM,OAAEO,MAAH,EAAWP,OAAEO,MAAb,EAAqBP,OAAEE,gBAAvB,EAAyCF,OAAEE,gBAA3C,CAFL,EAGKhB,QAHL,CADF;;AAMA,MAAMY,SACJ,cAAK,QAAL,EACK,EADL,EAEK,CAACE,OAAEO,MAAH,EAAWR,iBAAX,EAA8BM,cAA9B,CAFL,EAGKV,OAHL,CADF;;AAMA,MAAMa,WACJ,cAAK,UAAL,EACK,EADL,EAEK,CAACR,OAAES,KAAF,CAAST,OAAEU,QAAF,CAAY,CAACV,OAAEM,GAAH,EAAQP,iBAAR,CAAZ,CAAT,CAAD,EAAoDC,OAAEO,MAAtD,EAA8DP,OAAEM,GAAhE,EAAqED,cAArE,CAFL,EAGKT,SAHL,CADF;;QASEY,Q,GAAAA,Q","file":"_common-validators.js","sourcesContent":["import { $, S, def, ValidationError } from '../../fun';\r\n\r\nconst { curry3, map, mapLeft, pipeK, compose, isRight, ifElse, \r\n        toMaybe, maybeToNullable, Right } = S;\r\n\r\n// _repalce :: String -> String -> ValidationError -> ValidationError\r\nconst _replace = curry3 ((key, replacement, error) => {\r\n  const message = error.value;\r\n  return ValidationError.of (message.replace (key, replacement));\r\n});\r\n\r\n// _format :: String -> Either ValidationError (Maybe a) -> Either ValidationError a\r\nconst _format = key => ifElse (isRight)\r\n                              (map (maybeToNullable))\r\n                              (mapLeft (replace ('$key') (key)));\r\n                              \r\n// _validate :: [(Maybe a -> Either ValidationError (Maybe a))] -> String -> a -> Either ValidationError a\r\nconst _validate = curry3 ((fns, key, value) => { \r\n  return compose (format (key)) \r\n                 (pipeK (fns))\r\n                 (Right (toMaybe (value)));\r\n});\r\n\r\n\r\n\r\n// ----- Sanctuary \r\n\r\nconst $ValErrorOrMaybeA = $.$Either ($.$ValidationError) ($.$Maybe ($.$a));\r\nconst $ValErrorOrAny = $.$Either ($.$ValidationError) ($.Any);\r\n\r\nconst replace = \r\n  def ('replace')\r\n      ({})\r\n      ([$.String, $.String, $.$ValidationError, $.$ValidationError])\r\n      (_replace);\r\n\r\nconst format =\r\n  def ('format')\r\n      ({})\r\n      ([$.String, $ValErrorOrMaybeA, $ValErrorOrAny])\r\n      (_format);\r\n\r\nconst validate =\r\n  def ('validate')\r\n      ({})\r\n      ([$.Array ($.Function ([$.Any, $ValErrorOrMaybeA])), $.String, $.Any, $ValErrorOrAny])\r\n      (_validate);\r\n\r\n\r\n\r\nexport {\r\n  validate\r\n}\r\n"]}