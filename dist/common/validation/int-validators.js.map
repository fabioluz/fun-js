{"version":3,"sources":["../../../src/common/validation/int-validators.js"],"names":["curry2","fromMaybe","isNothing","Right","S","isPositive","mbNumber","value","Left"],"mappings":";;AAAA;;AAEA,MAAM,EAAEA,MAAF,EAAUC,SAAV,EAAqBC,SAArB,EAAgCC,KAAhC,KAA0CC,MAAhD;;AAEA;;AAEA;AACA,MAAMC,aAAaC,YAAY;AAC7B,MAAIJ,UAAWI,QAAX,CAAJ,EAA0B;AACxB,WAAOH,MAAOG,QAAP,CAAP;AACD;;AAED,QAAMC,QAAQN,UAAW,CAAC,CAAZ,EAAgBK,QAAhB,CAAd;AACA,MAAIC,SAAS,CAAb,EAAgB;AACd,WAAOJ,MAAOG,QAAP,CAAP;AACD;;AAED,SAAOE,KAAM,0BAAiB,mCAAjB,CAAN,CAAP;AACD,CAXD","file":"int-validators.js","sourcesContent":["import { $, S, def, ValidationError } from '../../fun';\r\n\r\nconst { curry2, fromMaybe, isNothing, Right } = S;\r\n\r\n// ----- Validators\r\n\r\n// isPositive :: Maybe Number -> Eihter ValidationError (Maybe Number)\r\nconst isPositive = mbNumber => {\r\n  if (isNothing (mbNumber)) {\r\n    return Right (mbNumber);\r\n  }\r\n\r\n  const value = fromMaybe (-1) (mbNumber);\r\n  if (value >= 0) {\r\n    return Right (mbNumber);\r\n  }\r\n  \r\n  return Left (ValidationError ('$key should be a positive number.'))\r\n}"]}