{"version":3,"sources":["../src/fun.js"],"names":["S","Sanctuary","create","checkTypes","env","concat","FutureTypes","def","$","a","TypeVariable","b","$Either","EitherType","Either","$Maybe","MaybeType","Maybe","$Future","FutureType","Future","$ConcurrentFuture","ConcurrentFutureType","$Env","$AppError","$ValidationError","chainRej","curry2","fn","future","replace","curry3","key","replacement","str","lift4","curry4","a1","a2","a3","a4","Z","ap","map","eitherToFuture","either","reject","of","invoke","arg","Env","DatabaseError","ValidationError"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,MAAMA,IAAIC,oBAAUC,MAAV,CAAkB;AAC1BC,cAAY,IADc;AAE1BC,OAAKH,oBAAUG,GAAV,CAAcC,MAAd,CAAsBC,gCAAYF,GAAlC;AAFqB,CAAlB,CAAV;;AAKA,MAAMG,MAAMC,uBAAEN,MAAF,CAAU;AACpBC,cAAY,IADQ;AAEpBC,OAAKI,uBAAEJ,GAAF,CAAMC,MAAN,CAAcC,gCAAYF,GAA1B;AAFe,CAAV,CAAZ;;AAKAI,uBAAEC,CAAF,GAAMD,uBAAEE,YAAF,CAAgB,GAAhB,CAAN;AACAF,uBAAEG,CAAF,GAAMH,uBAAEE,YAAF,CAAgB,GAAhB,CAAN;AACAF,uBAAEI,OAAF,GAAYZ,EAAEa,UAAd;AACAL,uBAAEM,MAAF,GAAWd,EAAEa,UAAb;AACAL,uBAAEO,MAAF,GAAWf,EAAEgB,SAAb;AACAR,uBAAES,KAAF,GAAUjB,EAAEgB,SAAZ;AACAR,uBAAEU,OAAF,GAAYZ,gCAAYa,UAAxB;AACAX,uBAAEY,MAAF,GAAWd,gCAAYa,UAAvB;AACAX,uBAAEa,iBAAF,GAAsBf,gCAAYgB,oBAAlC;AACAd,uBAAEe,IAAF,GAASA,SAAT;AACAf,uBAAEgB,SAAF,GAAcA,gBAAd;AACAhB,uBAAEiB,gBAAF,GAAqBA,uBAArB;;AAEA;AACAzB,EAAE0B,QAAF,GAAa1B,EAAE2B,MAAF,CAAU,CAACC,EAAD,EAAKC,MAAL,KAAgBA,OAAOH,QAAP,CAAiBE,EAAjB,CAA1B,CAAb;AACA5B,EAAE8B,OAAF,GAAY9B,EAAE+B,MAAF,CAAS,CAACC,GAAD,EAAMC,WAAN,EAAmBC,GAAnB,KAA2BA,IAAIJ,OAAJ,CAAaE,GAAb,EAAkBC,WAAlB,CAApC,CAAZ;AACAjC,EAAEmC,KAAF,GAAUnC,EAAEoC,MAAF,CAAU,CAACR,EAAD,EAAKS,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,KAAwBC,+BAAEC,EAAF,CAAMD,+BAAEC,EAAF,CAAMD,+BAAEC,EAAF,CAAMD,+BAAEE,GAAF,CAAOf,EAAP,EAAWS,EAAX,CAAN,EAAsBC,EAAtB,CAAN,EAAiCC,EAAjC,CAAN,EAA4CC,EAA5C,CAAlC,CAAV;AACAxC,EAAE4C,cAAF,GAAmB5C,EAAE6C,MAAF,CAAUzB,kBAAO0B,MAAjB,EAA0B1B,kBAAO2B,EAAjC,CAAnB;AACA/C,EAAEgD,MAAF,GAAWC,OAAOrB,MAAMA,GAAIqB,GAAJ,CAAxB;;QAGEzC,C,GAAAA,sB;QACAR,C,GAAAA,C;QACAO,G,GAAAA,G;QACAa,M,GAAAA,iB;QACA8B,G,GAAAA,Q;QACAC,a,GAAAA,oB;QACAC,e,GAAAA,sB","file":"fun.js","sourcesContent":["import Sanctuary from 'sanctuary';\r\nimport $ from 'sanctuary-def';\r\nimport Z from 'sanctuary-type-classes';\r\nimport Future from 'fluture';\r\nimport FutureTypes from 'fluture-sanctuary-types';\r\nimport { Env, $Env } from './common/types/env';\r\nimport { DatabaseError, ValidationError, $AppError, $ValidationError } from './common/types/error';\r\n\r\nconst S = Sanctuary.create ({\r\n  checkTypes: true,\r\n  env: Sanctuary.env.concat (FutureTypes.env)\r\n});\r\n\r\nconst def = $.create ({\r\n  checkTypes: true,\r\n  env: $.env.concat (FutureTypes.env)\r\n})\r\n\r\n$.a = $.TypeVariable ('a');\r\n$.b = $.TypeVariable ('b');\r\n$.$Either = S.EitherType;\r\n$.Either = S.EitherType;\r\n$.$Maybe = S.MaybeType;\r\n$.Maybe = S.MaybeType;\r\n$.$Future = FutureTypes.FutureType;\r\n$.Future = FutureTypes.FutureType;\r\n$.$ConcurrentFuture = FutureTypes.ConcurrentFutureType;\r\n$.$Env = $Env;\r\n$.$AppError = $AppError;\r\n$.$ValidationError = $ValidationError;\r\n\r\n// Extensions\r\nS.chainRej = S.curry2 ((fn, future) => future.chainRej (fn));\r\nS.replace = S.curry3((key, replacement, str) => str.replace (key, replacement));\r\nS.lift4 = S.curry4 ((fn, a1, a2, a3, a4) => Z.ap (Z.ap (Z.ap (Z.map (fn, a1), a2), a3), a4));\r\nS.eitherToFuture = S.either (Future.reject) (Future.of);\r\nS.invoke = arg => fn => fn (arg); \r\n\r\nexport {\r\n  $,\r\n  S,\r\n  def,\r\n  Future,\r\n  Env,\r\n  DatabaseError,\r\n  ValidationError\r\n}"]}