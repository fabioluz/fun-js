{"version":3,"sources":["../src/server.js"],"names":["user","User","of","id","email","password","fullname","env","Env","repositories","UserRepository","UserService","getAll","fork","console","error","log"],"mappings":";;AAAA;;AACA;;AACA;;;;AACA;;;;;;AAEA,MAAMA,OAAOC,WAAKC,EAAL,CAAS;AACpBC,MAAI,MADgB;AAEpBC,SAAO,kBAFa;AAGpBC,YAAU,cAHU;AAIpBC,YAAU;AAJU,CAAT,CAAb;;AAOA,MAAMC,MAAM,IAAIC,QAAJ,CAAS;AACnBC,gBAAc;AACZT,UAAMU;AADM;AADK,CAAT,CAAZ;;AAMAC,sBACGC,MADH,CACW,CADX,EACeL,GADf,EAEGM,IAFH,CAESC,QAAQC,KAFjB,EAEwBD,QAAQE,GAFhC","file":"server.js","sourcesContent":["import { Env } from './common/types/env';\r\nimport { User } from './model/user';\r\nimport UserRepository from './persistence/repositories/user-repository';\r\nimport UserService from './service/user-service';\r\n\r\nconst user = User.of ({ \r\n  id: 'asdf',\r\n  email: 'asdfsad@sdfsd.df',\r\n  password: 'asdfsdafsadf',\r\n  fullname: 'asdfsadf' \r\n});\r\n\r\nconst env = new Env ({\r\n  repositories: {\r\n    user: UserRepository\r\n  }\r\n});\r\n\r\nUserService\r\n  .getAll (1) (env)\r\n  .fork (console.error, console.log);\r\n\r\n"]}